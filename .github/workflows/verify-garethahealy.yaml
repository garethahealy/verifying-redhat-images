name: "Verify custom image"

on: [ push, pull_request ]

# Declare default permissions as read only.
permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-sign:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Install Cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Build image
        id: build_image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2
        with:
          containerfiles: "Dockerfile"
          image: "example"
          oci: true
          tags: "github-signed"

      - name: Push to ghcr.io
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        id: push_image
        with:
          image: ${{ steps.build_image.outputs.image }}
          registry: ghcr.io/${{ github.repository }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ steps.build_image.outputs.tags }}

      - name: Cosign login
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | cosign login --username ${{ github.repository_owner }} --password-stdin ghcr.io

      - name: Sign Image
        env:
          image_uri: "ghcr.io/${{ github.repository }}/${{ steps.build_image.outputs.image }}@${{ steps.push_image.outputs.digest }}"
        run: |
          cosign sign --yes ${image_uri}

    outputs:
      image_repo: "ghcr.io/${{ github.repository }}/${{ steps.build_image.outputs.image }}"
      image_digest: "${{ steps.push_image.outputs.digest }}"
      image_uri: "ghcr.io/${{ github.repository }}/${{ steps.build_image.outputs.image }}@${{ steps.push_image.outputs.digest }}"

  verify:
    runs-on: ubuntu-latest
    needs: [build-and-sign]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3

      - name: Initialize cosign
        run: cosign initialize

      - name: Verify ghcr.io/garethahealy/verifying-redhat-images via cosign
        env:
          image_uri: "${{ needs.build-and-sign.outputs.image_uri }}"
        run: cosign verify --certificate-oidc-issuer=https://token.actions.githubusercontent.com --certificate-identity=https://github.com/garethahealy/verifying-redhat-images/.github/workflows/verify-garethahealy.yaml@${{ github.ref }} ${image_uri}

  provenance_image:
    needs: [build-and-sign]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    if: startsWith(github.ref, 'refs/tags/')
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ needs.build-and-sign.outputs.image_repo }}
      digest: ${{ needs.build-and-sign.outputs.image_digest }}
      registry-username: ${{ github.repository_owner }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  update-samples:
    runs-on: ubuntu-latest
    needs: [build-and-sign, verify]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6

      - name: Install tuf-client
        run: go install github.com/theupdateframework/go-tuf/cmd/tuf-client@latest

      - name: Install Cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac # v3

      - name: Initialize cosign
        run: cosign initialize

      - name: Download fulcio certs
        run: |
          tuf-client init https://tuf-repo-cdn.sigstore.dev ~/.sigstore/root/tuf-repo-cdn.sigstore.dev/root.json

          tuf-client get https://tuf-repo-cdn.sigstore.dev fulcio_v1.crt.pem > fulcio_v1.crt.pem
          tuf-client get https://tuf-repo-cdn.sigstore.dev fulcio_intermediate_v1.crt.pem > fulcio_intermediate_v1.crt.pem

      - name: Download rekor certs
        run: |
          curl --header 'Content-Type: application/x-pem-file' https://rekor.sigstore.dev/api/v1/log/publicKey > rekor.pub

      - name: Attach fulcio/rekor certs to env
        id: certs
        run: |
          echo "FULCIO_CA=$(awk '{print $0}' fulcio_*.pem | base64 -w 0)" >> "$GITHUB_OUTPUT"
          echo "REKOR_KEY=$(cat rekor.pub | base64 -w 0)" >> "$GITHUB_OUTPUT"

      - name: Update samples/ocp/ImagePolicy/garethahealy_manually_fulcio.yaml with keys
        uses: mikefarah/yq@6251e95af8df3505def48c71f3119836701495d6 # v4.47.2
        env:
          FULCIO_CA: "${{ steps.certs.outputs.FULCIO_CA }}"
          REKOR_KEY: "${{ steps.certs.outputs.REKOR_KEY }}"
        with:
          cmd: yq --inplace '.spec.policy.rootOfTrust.fulcioCAWithRekor.fulcioCAData = env(FULCIO_CA), .spec.policy.rootOfTrust.fulcioCAWithRekor.rekorKeyData = env(REKOR_KEY)' samples/ocp/ImagePolicy/garethahealy_manually_fulcio.yaml

      - name: Update samples/ocp/ImagePolicy/garethahealy_manually_fulcio.yaml with issuer/email
        uses: mikefarah/yq@6251e95af8df3505def48c71f3119836701495d6 # v4.47.2
        env:
          OIDC_ISSUER: "https://github.com/login/oauth"
          SIGNED_EMAIL: "garethahealy@gmail.com"
        with:
          cmd: yq --inplace '.spec.policy.rootOfTrust.fulcioCAWithRekor.fulcioSubject.oidcIssuer = env(OIDC_ISSUER), .spec.policy.rootOfTrust.fulcioCAWithRekor.fulcioSubject.signedEmail = env(SIGNED_EMAIL)' samples/ocp/ImagePolicy/garethahealy_manually_fulcio.yaml

      - name: Update samples/ocp/Deployments/garethahealy.yaml with image
        uses: mikefarah/yq@6251e95af8df3505def48c71f3119836701495d6 # v4.47.2
        env:
          image_uri: "${{ needs.build-and-sign.outputs.image_uri }}"
        with:
          cmd: yq --inplace '.spec.template.spec.containers[0].image = env(image_uri)' samples/ocp/Deployments/garethahealy.yaml

      - name: cat samples/*
        run: |
          cat samples/ocp/ImagePolicy/garethahealy_manually_fulcio.yaml
          cat samples/ocp/Deployments/garethahealy.yaml

      - name: Attach samples
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: samples
          include-hidden-files: true
          path: samples/
